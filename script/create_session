#!/usr/bin/env python
from __future__ import print_function
import subprocess
import sys

import rospy

def safe_call(cmd_list):
    """Makes a subprocess check_call and outputs a clear error message on failure and then exits"""
    try:
        subprocess.check_output(cmd_list)
        return True
    except subprocess.CalledProcessError as err_thrown:
        rospy.logerr('Error while calling "%s"', err_thrown.cmd)
        return False

def main():
    """Creates a new tmux session if it does not yet exist"""
    rospy.init_node('create_catmux_session', anonymous=True)
    session_name = rospy.get_param('~session_name', 'catmux')
    if safe_call(['tmux', 'has-session', '-t', session_name]):
        rospy.logwarn('Session with name "%s" already exists. Not overwriting session.',
                      session_name)
        sys.exit(0)

    if not safe_call(['tmux', 'new-session', '-s', session_name, '-d']):
        sys.exit(1)

if __name__ == "__main__":
    main()
